// <auto-generated />
using System;
using FinanSist.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinanSist.Database.Migrations
{
    [DbContext(typeof(FinanSistContext))]
    partial class FinanSistContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FinanSist.Domain.Entities.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("AlteradoEm")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(120)")
                        .HasComment("Nome da categoria");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasComment("Gerenciador de estado que define qual é o tipo da categoria, sendo eles: 0 [Receita] e 1 [Despesa]");

                    b.HasKey("Id");

                    b.ToTable("Categoria", (string)null);

                    b.HasComment("Tabela reposável pelos registros das categorias");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                });

            modelBuilder.Entity("FinanSist.Domain.Entities.Entidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("AlteradoEm")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasComment("Descrição da entidade");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(120)")
                        .HasComment("Nome da entidade");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique()
                        .HasDatabaseName("UnqEntidadeNome");

                    b.ToTable("Entidade", (string)null);

                    b.HasComment("Tabela reposável pelos registros das entidades");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                });

            modelBuilder.Entity("FinanSist.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("AlteradoEm")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasComment("E-mail do usuário");

                    b.Property<bool>("ExigirNovaSenha")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(120)")
                        .HasComment("Nome do usuário");

                    b.Property<string>("Permissao")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasComment("Permissão do usuário, sendo elas: Administrador e Padrao");

                    b.Property<string>("Senha")
                        .HasColumnType("LONGTEXT")
                        .HasComment("Senha do usuário");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasComment("Telefone do usuário");

                    b.Property<string>("TokenSenha")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("TokenSenhaValidade")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("UnqUsuarioEmail");

                    b.ToTable("Usuario", (string)null);

                    b.HasComment("Tabela reposável por organizar os usuários");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8");
                });
#pragma warning restore 612, 618
        }
    }
}
